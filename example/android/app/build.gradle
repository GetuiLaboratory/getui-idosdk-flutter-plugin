def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def flutterRoot = localProperties.getProperty('flutter.sdk')
if (flutterRoot == null) {
    throw new GradleException("Flutter SDK not found. Define location with flutter.sdk in the local.properties file.")
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

apply plugin: 'com.android.application'
apply from: "$flutterRoot/packages/flutter_tools/gradle/flutter.gradle"

android {
    compileSdkVersion flutter.compileSdkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {

        applicationId "com.gt.demo"
        minSdkVersion flutter.minSdkVersion
        targetSdkVersion flutter.targetSdkVersion
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        manifestPlaceholders = [
                GETUI_APPID         : "djYjSlFVMf6p5YOy2OQUs8",//请填写开发者在 https://dev.getui.com/ 申请的GETUI_APPID
                GT_INSTALL_CHANNEL: "flutter",//请填写开发者需要的channel
        ]
    }

//    signingConfigs {
//        myConfig {
//            storeFile file("自己填")//请换成开发者自己的签名配置
//            keyAlias '自己填'
//            keyPassword '自己填'
//            storeFile file('../自己填')
//            storePassword '自己填'
//        }
//    }

    buildTypes {
        debug {
            minifyEnabled false
//            signingConfig signingConfigs.myConfig
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }

        release {
            zipAlignEnabled true     //Zipalign优化
            shrinkResources true    // 移除无用的resource文件
            minifyEnabled true
//            signingConfig signingConfigs.myConfig
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}
dependencies {
    // //用户运营sdk
    // implementation 'com.getui:gsido:1.4.6.0'
    // //个推核心组件
    // implementation 'com.getui:gtc:3.2.13.0'
}